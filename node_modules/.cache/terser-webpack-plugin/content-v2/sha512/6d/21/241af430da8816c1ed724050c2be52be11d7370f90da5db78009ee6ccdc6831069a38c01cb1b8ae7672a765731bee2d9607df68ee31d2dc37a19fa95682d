{"map":"{\"version\":3,\"sources\":[\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/store/index.ts\",\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/containers/app/index.tsx\",\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/action/creators/index.ts\"],\"names\":[\"redux_1\",\"__webpack_require__\",\"redux_saga_1\",\"reducers_1\",\"sagas_1\",\"composeEnhancers\",\"window\",\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\",\"compose\",\"sagaMiddleware\",\"default\",\"middlewares\",\"applyMiddleware\",\"store\",\"createStore\",\"run\",\"exports\",\"React\",\"react_redux_1\",\"react_bootstrap_1\",\"creators_1\",\"List_1\",\"App\",\"connect\",\"state\",\"campaigns\",\"dispatch\",\"Component\",\"[object Object]\",\"props\",\"super\",\"this\",\"console\",\"log\",\"getCampaigns\",\"createElement\",\"id\",\"Navbar\",\"Brand\",\"href\",\"Row\",\"Col\",\"className\",\"types\",\"type\",\"FETCH_CAMPAIGNS\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,IACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAH,EAAA,KAEMI,EAAoBC,OAAeC,sCAAwCP,EAAAQ,QAC3EC,EAAiBP,EAAAQ,UACjBC,EAAcX,EAAAY,gBAAgBH,GAC9BI,EAAQb,EAAAc,YACZX,EAAAO,QACAL,EAAiBM,IAEnBF,EAAeM,IAAIX,EAAAM,SAEnBM,EAAAN,QAAeG,qFCdf,MAAAI,EAAAhB,EAAA,GAEAiB,EAAAjB,EAAA,IACAkB,EAAAlB,EAAA,KAOAmB,EAAAnB,EAAA,KACAoB,EAAApB,EAAA,KAGAA,EAAA,KAmDA,MAUMqB,EAAMJ,EAAAK,QAVaC,IAAiB,CACxCC,UAAWD,EAAMC,YAGSC,IACnB,CACLA,SAAAA,IAIQR,CAvDZ,cAA2BD,EAAMU,UAC/BC,YAAYC,GACVC,MAAMD,GAENE,KAAKP,MAAQ,CACXC,UAAW,IAIfG,oBACEI,QAAQC,IAAI,eACZF,KAAKF,MAAMH,SAASN,EAAAc,gBAGfN,0BAA0BC,GAC/BG,QAAQC,IAAI,CAACJ,MAAAA,IASfD,SACE,MAAMH,UAAEA,GAAcM,KAAKP,MAC3B,OACEP,EAAAkB,cAAA,MAAA,CAAKC,GAAG,OACNnB,EAAAkB,cAAChB,EAAAkB,OAAM,KACLpB,EAAAkB,cAAChB,EAAAkB,OAAOC,MAAK,CAACC,KAAK,SAAO,oBAE5BtB,EAAAkB,cAAA,MAAA,CAAKC,GAAG,WACNnB,EAAAkB,cAAChB,EAAAqB,IAAG,KACFvB,EAAAkB,cAAChB,EAAAsB,IAAG,KACFxB,EAAAkB,cAAA,MAAA,CAAKO,UAAU,iBACbzB,EAAAkB,cAACd,EAAAX,QAAI,cAyBrBM,EAAAN,QAAeY,qFChFf,MAAAqB,EAAA1C,EAAA,IAEae,EAAAkB,aAAe,KACnB,CACLU,KAAMD,EAAME\",\"sourcesContent\":[\"import { applyMiddleware, createStore, compose } from 'redux'\\nimport createSagaMiddleware from 'redux-saga'\\nimport reducers from '../reducers'\\nimport rootSaga from '../sagas'\\n\\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\\nconst sagaMiddleware = createSagaMiddleware()\\nconst middlewares = applyMiddleware(sagaMiddleware)\\nconst store = createStore(\\n  reducers,\\n  composeEnhancers(middlewares)\\n)\\nsagaMiddleware.run(rootSaga)\\n\\nexport default store\",\"import * as React from 'react'\\nimport { Dispatch } from 'redux'\\nimport { connect } from 'react-redux'\\nimport { \\n  Col,\\n  Container,\\n  Navbar,\\n  Row\\n} from 'react-bootstrap'\\n\\nimport { getCampaigns } from '../../action/creators'\\nimport List from \\\"../../components/List\\\"\\nimport { Campaign } from \\\"../../types/campaign\\\"\\nimport { State, LatLng } from '../../reducers'\\nimport '../../styles/index.scss'\\n\\ninterface AppState {\\n  campaigns: Array<Campaign>\\n}\\n\\nclass AppComponent extends React.Component<any, AppState> {\\n  constructor(props: any) {\\n    super(props)\\n\\n    this.state = {\\n      campaigns: []\\n    }\\n  }\\n\\n  componentDidMount() {\\n    console.log('mounting...')\\n    this.props.dispatch(getCampaigns())\\n  }\\n\\n  public componentWillReceiveProps(props: any) {\\n    console.log({props})\\n    // if (props.located && props.location) {\\n    //   this.setState({\\n    //     campaigns: props.location,\\n    //     center: props.location\\n    //   })\\n    // }\\n  }\\n\\n  render() {\\n    const { campaigns } = this.state\\n    return (\\n      <div id=\\\"app\\\">\\n        <Navbar>\\n          <Navbar.Brand href=\\\"#home\\\">React Campaigns</Navbar.Brand>\\n        </Navbar>        \\n        <div id=\\\"wrapper\\\">\\n          <Row>\\n            <Col>\\n              <div className=\\\"campaign-list\\\">\\n                <List />\\n              </div>\\n            </Col>\\n          </Row>\\n        </div>                   \\n      </div>\\n    )\\n  }\\n}\\n\\nconst mapStateToProps = (state: State) => ({\\n  campaigns: state.campaigns,\\n})\\n\\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\\n  return {\\n    dispatch\\n  }\\n}\\n\\nconst App = connect(\\n  mapStateToProps,\\n  mapDispatchToProps\\n)(AppComponent)\\n\\nexport default App\\n\",\"import * as types from '../types';\\n\\nexport const getCampaigns = () => {\\n  return {\\n    type: types.FETCH_CAMPAIGNS\\n  }\\n}\"]}","code":"webpackHotUpdate(0,{113:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=n(32),c=n(149),o=n(114),s=n(115),l=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||a.compose,r=c.default(),i=a.applyMiddleware(r),p=a.createStore(o.default,l(i));r.run(s.default),t.default=p},119:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=n(0),c=n(96),o=n(148),s=n(153),l=n(142);n(143);const r=c.connect(e=>({campaigns:e.campaigns}),e=>({dispatch:e}))(class extends a.Component{constructor(e){super(e),this.state={campaigns:[]}}componentDidMount(){console.log(\"mounting...\"),this.props.dispatch(s.getCampaigns())}componentWillReceiveProps(e){console.log({props:e})}render(){const{campaigns:e}=this.state;return a.createElement(\"div\",{id:\"app\"},a.createElement(o.Navbar,null,a.createElement(o.Navbar.Brand,{href:\"#home\"},\"React Campaigns\")),a.createElement(\"div\",{id:\"wrapper\"},a.createElement(o.Row,null,a.createElement(o.Col,null,a.createElement(\"div\",{className:\"campaign-list\"},a.createElement(l.default,null))))))}});t.default=r},153:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=n(33);t.getCampaigns=()=>({type:a.FETCH_CAMPAIGNS})}});","extractedComments":[]}