{"map":"{\"version\":3,\"sources\":[\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/index.tsx\",\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/containers/app/index.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"ReactDom\",\"react_redux_1\",\"store_1\",\"app_1\",\"ConnectedApp\",\"connect\",\"state\",\"default\",\"render\",\"createElement\",\"Provider\",\"store\",\"document\",\"getElementById\",\"react_bootstrap_1\",\"creators_1\",\"List_1\",\"App\",\"fetching\",\"campaigns\",\"dispatch\",\"Component\",\"[object Object]\",\"props\",\"super\",\"this\",\"console\",\"log\",\"getCampaigns\",\"setState\",\"id\",\"Navbar\",\"Brand\",\"href\",\"Row\",\"Col\",\"className\",\"data\",\"loading\",\"exports\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,IACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,KACAI,EAAAJ,EAAA,KAEMK,EAAeH,EAAAI,QAASC,GACrBA,EADYL,CAElBE,EAAAI,SAEHP,EAASQ,OACPV,EAAAW,cAACR,EAAAS,SAAQ,CAACC,MAAOT,EAAAK,SACfT,EAAAW,cAACL,EAAY,OAEfQ,SAASC,eAAe,4FCd1B,MAAAf,EAAAC,EAAA,GAEAE,EAAAF,EAAA,IACAe,EAAAf,EAAA,KAOAgB,EAAAhB,EAAA,KACAiB,EAAAjB,EAAA,KAGAA,EAAA,KA0DA,MAWMkB,EAAMhB,EAAAI,QAXaC,IAAiB,CACxCY,SAAUZ,EAAMY,SAChBC,UAAWb,EAAMa,YAGSC,IACnB,CACLA,SAAAA,IAIQnB,CAxDZ,cAA2BH,EAAMuB,UAC/BC,YAAYC,GACVC,MAAMD,GAENE,KAAKnB,MAAQ,CACXa,UAAW,GACXD,SAAUK,EAAML,UAIpBI,oBACEI,QAAQC,IAAI,eACZF,KAAKF,MAAMH,SAASL,EAAAa,gBAGfN,0BAA0BC,GAC3BA,EAAMJ,WACRM,KAAKI,SAAS,CACZV,UAAWI,EAAMJ,UACjBD,SAAUK,EAAML,WAKtBI,SACE,MAAMH,UAAEA,EAASD,SAAEA,GAAaO,KAAKnB,MACrC,OACER,EAAAW,cAAA,MAAA,CAAKqB,GAAG,OACNhC,EAAAW,cAACK,EAAAiB,OAAM,KACLjC,EAAAW,cAACK,EAAAiB,OAAOC,MAAK,CAACC,KAAK,SAAO,oBAE5BnC,EAAAW,cAAA,MAAA,CAAKqB,GAAG,WACNhC,EAAAW,cAACK,EAAAoB,IAAG,KACFpC,EAAAW,cAACK,EAAAqB,IAAG,KACFrC,EAAAW,cAAA,MAAA,CAAK2B,UAAU,iBACbtC,EAAAW,cAACO,EAAAT,QAAI,CAAC8B,KAAMlB,EAAWmB,QAASpB,YA0BhDqB,EAAAhC,QAAeU\",\"sourcesContent\":[\"import * as React from 'react'\\nimport * as ReactDom from 'react-dom'\\nimport { Provider, connect } from 'react-redux'\\nimport store from './store'\\nimport App from './containers/app'\\n\\nconst ConnectedApp = connect((state) => {\\n  return state\\n})(App)\\n\\nReactDom.render(\\n  <Provider store={store}>\\n    <ConnectedApp />\\n  </Provider>,\\n  document.getElementById('root'),\\n)\\n\",\"import * as React from 'react'\\nimport { Dispatch } from 'redux'\\nimport { connect } from 'react-redux'\\nimport { \\n  Col,\\n  Container,\\n  Navbar,\\n  Row\\n} from 'react-bootstrap'\\n\\nimport { getCampaigns } from '../../action/creators'\\nimport List from \\\"../../components/List\\\"\\nimport { Campaign } from \\\"../../types/campaign\\\"\\nimport { State, LatLng } from '../../reducers'\\nimport '../../styles/index.scss'\\n\\ninterface Props {\\n  fetching: boolean\\n  campaigns: Array<Campaign>\\n  dispatch: any\\n}\\n\\ninterface AppState {\\n  fetching: boolean\\n  campaigns: Array<Campaign>\\n}\\n\\nclass AppComponent extends React.Component<Props, AppState> {\\n  constructor(props: Props) {\\n    super(props)\\n\\n    this.state = {\\n      campaigns: [],\\n      fetching: props.fetching,\\n    }\\n  }\\n\\n  componentDidMount() {\\n    console.log('mounting...')\\n    this.props.dispatch(getCampaigns())\\n  }\\n\\n  public componentWillReceiveProps(props: any) {\\n    if (props.campaigns) {\\n      this.setState({\\n        campaigns: props.campaigns,\\n        fetching: props.fetching\\n      })\\n    }\\n  }\\n\\n  render() {\\n    const { campaigns, fetching } = this.state\\n    return (\\n      <div id=\\\"app\\\">\\n        <Navbar>\\n          <Navbar.Brand href=\\\"#home\\\">React Campaigns</Navbar.Brand>\\n        </Navbar>        \\n        <div id=\\\"wrapper\\\">\\n          <Row>\\n            <Col>\\n              <div className=\\\"campaign-list\\\">\\n                <List data={campaigns} loading={fetching} />\\n              </div>\\n            </Col>\\n          </Row>\\n        </div>                   \\n      </div>\\n    )\\n  }\\n}\\n\\nconst mapStateToProps = (state: State) => ({\\n  fetching: state.fetching,\\n  campaigns: state.campaigns,\\n})\\n\\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\\n  return {\\n    dispatch\\n  }\\n}\\n\\nconst App = connect(\\n  mapStateToProps,\\n  mapDispatchToProps\\n)(AppComponent)\\n\\nexport default App\\n\"]}","code":"webpackHotUpdate(0,{108:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=n(0),c=n(10),i=n(95),s=n(113),o=n(117),r=i.connect(e=>e)(o.default);c.render(a.createElement(i.Provider,{store:s.default},a.createElement(r,null)),document.getElementById(\"root\"))},117:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=n(0),c=n(95),i=n(147),s=n(140),o=n(141);n(142);const r=c.connect(e=>({fetching:e.fetching,campaigns:e.campaigns}),e=>({dispatch:e}))(class extends a.Component{constructor(e){super(e),this.state={campaigns:[],fetching:e.fetching}}componentDidMount(){console.log(\"mounting...\"),this.props.dispatch(s.getCampaigns())}componentWillReceiveProps(e){e.campaigns&&this.setState({campaigns:e.campaigns,fetching:e.fetching})}render(){const{campaigns:e,fetching:t}=this.state;return a.createElement(\"div\",{id:\"app\"},a.createElement(i.Navbar,null,a.createElement(i.Navbar.Brand,{href:\"#home\"},\"React Campaigns\")),a.createElement(\"div\",{id:\"wrapper\"},a.createElement(i.Row,null,a.createElement(i.Col,null,a.createElement(\"div\",{className:\"campaign-list\"},a.createElement(o.default,{data:e,loading:t}))))))}});t.default=r}});","extractedComments":[]}