{"map":"{\"version\":3,\"sources\":[\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/containers/app/index.tsx\",\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/components/List/index.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"react_redux_1\",\"react_bootstrap_1\",\"creators_1\",\"List_1\",\"App\",\"connect\",\"state\",\"fetching\",\"campaigns\",\"dispatch\",\"Component\",\"[object Object]\",\"props\",\"super\",\"this\",\"getCampaigns\",\"setState\",\"createElement\",\"id\",\"Navbar\",\"Brand\",\"href\",\"Row\",\"Col\",\"className\",\"md\",\"InputGroup\",\"FormControl\",\"placeholder\",\"aria-label\",\"aria-describedby\",\"Append\",\"Button\",\"type\",\"span\",\"offset\",\"Form\",\"Control\",\"default\",\"data\",\"loading\",\"exports\",\"moment\",\"Spinner\",\"animation\",\"Table\",\"striped\",\"bordered\",\"hover\",\"map\",\"c\",\"index\",\"curDate\",\"format\",\"key\",\"name\",\"startDate\",\"endDate\",\"Fragment\",\"Badge\",\"variant\",\"Budget\"],\"mappings\":\"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\",\"sourcesContent\":[\"import * as React from 'react'\\nimport { Dispatch } from 'redux'\\nimport { connect } from 'react-redux'\\nimport { \\n  Button,\\n  Col,\\n  Form,\\n  FormControl,\\n  InputGroup,\\n  Navbar,\\n  Row\\n} from 'react-bootstrap'\\n\\nimport { getCampaigns } from '../../action/creators'\\nimport List from \\\"../../components/List\\\"\\nimport { Campaign } from \\\"../../types/campaign\\\"\\nimport { State } from '../../reducers'\\nimport '../../styles/index.scss'\\n\\ninterface Props {\\n  fetching: boolean\\n  campaigns: Array<Campaign>\\n  dispatch: any\\n}\\n\\ninterface AppState {\\n  fetching: boolean\\n  campaigns: Array<Campaign>\\n}\\n\\nclass AppComponent extends React.Component<Props, AppState> {\\n  constructor(props: Props) {\\n    super(props)\\n\\n    this.state = {\\n      campaigns: [],\\n      fetching: props.fetching,\\n    }\\n  }\\n\\n  componentDidMount() {\\n    this.props.dispatch(getCampaigns())\\n  }\\n\\n  public componentWillReceiveProps(props: any) {\\n    if (props.campaigns) {\\n      this.setState({\\n        campaigns: props.campaigns,\\n        fetching: props.fetching\\n      })\\n    }\\n  }\\n\\n  render() {\\n    const { campaigns, fetching } = this.state\\n    return (\\n      <div id=\\\"app\\\">\\n        <Navbar>\\n          <Navbar.Brand href=\\\"#home\\\">React Campaigns</Navbar.Brand>\\n        </Navbar>        \\n        <div id=\\\"wrapper\\\">\\n          <Row>\\n            <Col>\\n              <div className=\\\"filters\\\">\\n                <Row>\\n                  <Col md={5}>\\n                    <InputGroup className=\\\"mb-3\\\">\\n                      <FormControl\\n                        placeholder=\\\"Search by name\\\"\\n                        aria-label=\\\"Search by name\\\"\\n                        aria-describedby=\\\"basic-addon2\\\"\\n                      />\\n                      <InputGroup.Append>\\n                        <Button type=\\\"submit\\\">Submit</Button>\\n                      </InputGroup.Append>\\n                    </InputGroup>\\n                  </Col>\\n                  <Col md={{ span: 6, offset: 1 }}>\\n                    <Row>\\n                      <Col md={6}>\\n                        <Form.Control type=\\\"text\\\" placeholder=\\\"Start Date\\\" />\\n                      </Col>\\n                      <Col md={6}>\\n                        <Form.Control type=\\\"text\\\" placeholder=\\\"End Date\\\" />\\n                      </Col>\\n                    </Row>\\n                  </Col>\\n                </Row>\\n              </div>\\n              <List data={campaigns} loading={fetching} />\\n            </Col>\\n            <Col>\\n            </Col>\\n          </Row>\\n        </div>                   \\n      </div>\\n    )\\n  }\\n}\\n\\nconst mapStateToProps = (state: State) => ({\\n  fetching: state.fetching,\\n  campaigns: state.campaigns,\\n})\\n\\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\\n  return {\\n    dispatch\\n  }\\n}\\n\\nconst App = connect(\\n  mapStateToProps,\\n  mapDispatchToProps\\n)(AppComponent)\\n\\nexport default App\\n\",\"import * as React from \\\"react\\\"\\nimport * as moment from \\\"moment\\\"\\nimport { \\n  Badge,\\n  Spinner, \\n  Table \\n} from 'react-bootstrap'\\nimport { Campaign } from \\\"../../types/campaign\\\"\\nimport './styles.scss'\\n\\ninterface Props {\\n  data: Array<Campaign>\\n  loading: boolean\\n}\\n\\nconst List = ({\\n  data,\\n  loading\\n}: Props) => {\\n  return (\\n    <div className=\\\"campaign-list\\\">\\n      {\\n        !loading ? \\n        <Table striped bordered hover>\\n          <thead>\\n            <tr>\\n              <th>Name</th>\\n              <th>Start Date</th>\\n              <th>End Date</th>\\n              <th>Active</th>\\n              <th>Budget</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            {\\n              data.map((c: Campaign, index: number) => {\\n                const curDate = moment().format('DD/MM/YYYY')\\n                return <tr key={index}>\\n                  <td>{c.name}</td>\\n                  <td>{c.startDate}</td>\\n                  <td>{c.endDate}</td>\\n                  <td>\\n                    {\\n                      curDate <= c.startDate && curDate <= c.endDate ? \\n                        <><Badge variant=\\\"success\\\">&nbsp;</Badge> Active</> :\\n                        <><Badge variant=\\\"danger\\\">&nbsp;</Badge> Inactive</>                    \\n                    }\\n                  </td>\\n                  <td>{c.Budget}</td>\\n                </tr>\\n              })\\n            }\\n          </tbody>\\n        </Table> : <Spinner animation=\\\"grow\\\" />\\n      }\\n    </div>\\n  )\\n}\\n\\nexport default List\"]}","code":"webpackHotUpdate(0,{121:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=a(0),l=a(99),r=a(98),c=a(144),m=a(145);a(148);const o=l.connect(e=>({fetching:e.fetching,campaigns:e.campaigns}),e=>({dispatch:e}))(class extends n.Component{constructor(e){super(e),this.state={campaigns:[],fetching:e.fetching}}componentDidMount(){this.props.dispatch(c.getCampaigns())}componentWillReceiveProps(e){e.campaigns&&this.setState({campaigns:e.campaigns,fetching:e.fetching})}render(){const{campaigns:e,fetching:t}=this.state;return n.createElement(\"div\",{id:\"app\"},n.createElement(r.Navbar,null,n.createElement(r.Navbar.Brand,{href:\"#home\"},\"React Campaigns\")),n.createElement(\"div\",{id:\"wrapper\"},n.createElement(r.Row,null,n.createElement(r.Col,null,n.createElement(\"div\",{className:\"filters\"},n.createElement(r.Row,null,n.createElement(r.Col,{md:5},n.createElement(r.InputGroup,{className:\"mb-3\"},n.createElement(r.FormControl,{placeholder:\"Search by name\",\"aria-label\":\"Search by name\",\"aria-describedby\":\"basic-addon2\"}),n.createElement(r.InputGroup.Append,null,n.createElement(r.Button,{type:\"submit\"},\"Submit\")))),n.createElement(r.Col,{md:{span:6,offset:1}},n.createElement(r.Row,null,n.createElement(r.Col,{md:6},n.createElement(r.Form.Control,{type:\"text\",placeholder:\"Start Date\"})),n.createElement(r.Col,{md:6},n.createElement(r.Form.Control,{type:\"text\",placeholder:\"End Date\"})))))),n.createElement(m.default,{data:e,loading:t})),n.createElement(r.Col,null))))}});t.default=o},145:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=a(0),l=a(154),r=a(98);a(146);t.default=({data:e,loading:t})=>n.createElement(\"div\",{className:\"campaign-list\"},t?n.createElement(r.Spinner,{animation:\"grow\"}):n.createElement(r.Table,{striped:!0,bordered:!0,hover:!0},n.createElement(\"thead\",null,n.createElement(\"tr\",null,n.createElement(\"th\",null,\"Name\"),n.createElement(\"th\",null,\"Start Date\"),n.createElement(\"th\",null,\"End Date\"),n.createElement(\"th\",null,\"Active\"),n.createElement(\"th\",null,\"Budget\"))),n.createElement(\"tbody\",null,e.map((e,t)=>{const a=l().format(\"DD/MM/YYYY\");return n.createElement(\"tr\",{key:t},n.createElement(\"td\",null,e.name),n.createElement(\"td\",null,e.startDate),n.createElement(\"td\",null,e.endDate),n.createElement(\"td\",null,a<=e.startDate&&a<=e.endDate?n.createElement(n.Fragment,null,n.createElement(r.Badge,{variant:\"success\"},\" \"),\" Active\"):n.createElement(n.Fragment,null,n.createElement(r.Badge,{variant:\"danger\"},\" \"),\" Inactive\")),n.createElement(\"td\",null,e.Budget))}))))}});","extractedComments":[]}