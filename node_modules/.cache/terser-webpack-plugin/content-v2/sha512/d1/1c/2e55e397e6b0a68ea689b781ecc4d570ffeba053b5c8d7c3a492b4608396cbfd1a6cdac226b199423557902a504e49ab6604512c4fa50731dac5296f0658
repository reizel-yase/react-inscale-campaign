{"map":"{\"version\":3,\"sources\":[\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/components/List/index.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"moment\",\"react_bootstrap_1\",\"exports\",\"default\",\"data\",\"loading\",\"createElement\",\"className\",\"Spinner\",\"animation\",\"Table\",\"striped\",\"bordered\",\"hover\",\"map\",\"c\",\"index\",\"curDate\",\"Date\",\"format\",\"start\",\"startDate\",\"end\",\"endDate\",\"console\",\"log\",\"isActive\",\"key\",\"name\",\"Badge\",\"variant\",\"Budget\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,KAMAA,EAAA,KAyDAG,EAAAC,QAlDa,EACXC,KAAAA,EACAC,QAAAA,KAGEP,EAAAQ,cAAA,MAAA,CAAKC,UAAU,iBAEVF,EAqCUP,EAAAQ,cAACL,EAAAO,QAAO,CAACC,UAAU,SApC9BX,EAAAQ,cAACL,EAAAS,MAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3Bf,EAAAQ,cAAA,QAAA,KACER,EAAAQ,cAAA,KAAA,KACER,EAAAQ,cAAA,KAAA,KAAA,QACAR,EAAAQ,cAAA,KAAA,KAAA,cACAR,EAAAQ,cAAA,KAAA,KAAA,YACAR,EAAAQ,cAAA,KAAA,KAAA,UACAR,EAAAQ,cAAA,KAAA,KAAA,YAGJR,EAAAQ,cAAA,QAAA,KAEIF,EAAKU,IAAI,CAACC,EAAaC,KACrB,MAAMC,EAAUjB,EAAO,IAAIkB,MAAQC,SAC7BC,EAAQpB,EAAOe,EAAEM,UAAW,cAC5BC,EAAMtB,EAAOe,EAAEQ,QAAS,cAO9B,OANAC,QAAQC,IAAI,CAACR,QAAAA,IACbO,QAAQC,IAAI,CAACH,IAAAA,IAIbE,QAAQC,IAAI,CAACC,UAHI,IAIV5B,EAAAQ,cAAA,KAAA,CAAIqB,IAAKX,GACdlB,EAAAQ,cAAA,KAAA,KAAKS,EAAEa,MACP9B,EAAAQ,cAAA,KAAA,KAAKc,GACLtB,EAAAQ,cAAA,KAAA,KAAKgB,GACLxB,EAAAQ,cAAA,KAAA,KACER,EAAAQ,cAAA,MAAA,CAAKC,UAAU,UACbT,EAAAQ,cAACL,EAAA4B,MAAK,CAACC,QAAsB,WAAmB,SAA+B,WAGnFhC,EAAAQ,cAAA,KAAA,KAAKS,EAAEgB\",\"sourcesContent\":[\"import * as React from \\\"react\\\"\\nimport * as moment from \\\"moment\\\"\\nimport { \\n  Badge,\\n  Spinner, \\n  Table \\n} from 'react-bootstrap'\\nimport { Campaign } from \\\"../../types/campaign\\\"\\nimport './styles.scss'\\n\\ninterface Props {\\n  data: Array<Campaign>\\n  loading: boolean\\n}\\n\\nconst List = ({\\n  data,\\n  loading\\n}: Props) => {\\n  return (\\n    <div className=\\\"campaign-list\\\">\\n      {\\n        !loading ? \\n        <Table striped bordered hover>\\n          <thead>\\n            <tr>\\n              <th>Name</th>\\n              <th>Start Date</th>\\n              <th>End Date</th>\\n              <th>Active</th>\\n              <th>Budget</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            {\\n              data.map((c: Campaign, index: number) => {\\n                const curDate = moment(new Date()).format()\\n                const start = moment(c.startDate, 'MM/DD/YYYY')\\n                const end = moment(c.endDate, 'MM/DD/YYYY')\\n                console.log({curDate})\\n                console.log({end})\\n                const isActive = true\\n                // console.log('isActiveEnd', end >= curDate)\\n                // const isActive = curDate >= start && curDate <= end\\n                console.log({isActive})\\n                return <tr key={index}>\\n                  <td>{c.name}</td>\\n                  <td>{start}</td>\\n                  <td>{end}</td>\\n                  <td>\\n                    <div className=\\\"status\\\">\\n                      <Badge variant={!!isActive ? \\\"success\\\": \\\"danger\\\"}>&nbsp;</Badge> {!!isActive ? \\\"Active\\\" : \\\"Inactive\\\"}\\n                    </div>\\n                  </td>\\n                  <td>{c.Budget}</td>\\n                </tr>\\n              })\\n            }\\n          </tbody>\\n        </Table> : <Spinner animation=\\\"grow\\\" />\\n      }\\n    </div>\\n  )\\n}\\n\\nexport default List\"]}","code":"webpackHotUpdate(0,{273:function(e,t,l){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=l(0),a=l(4),c=l(226);l(275);t.default=({data:e,loading:t})=>n.createElement(\"div\",{className:\"campaign-list\"},t?n.createElement(c.Spinner,{animation:\"grow\"}):n.createElement(c.Table,{striped:!0,bordered:!0,hover:!0},n.createElement(\"thead\",null,n.createElement(\"tr\",null,n.createElement(\"th\",null,\"Name\"),n.createElement(\"th\",null,\"Start Date\"),n.createElement(\"th\",null,\"End Date\"),n.createElement(\"th\",null,\"Active\"),n.createElement(\"th\",null,\"Budget\"))),n.createElement(\"tbody\",null,e.map((e,t)=>{const l=a(new Date).format(),r=a(e.startDate,\"MM/DD/YYYY\"),m=a(e.endDate,\"MM/DD/YYYY\");return console.log({curDate:l}),console.log({end:m}),console.log({isActive:!0}),n.createElement(\"tr\",{key:t},n.createElement(\"td\",null,e.name),n.createElement(\"td\",null,r),n.createElement(\"td\",null,m),n.createElement(\"td\",null,n.createElement(\"div\",{className:\"status\"},n.createElement(c.Badge,{variant:\"success\"},\"Â \"),\" \",\"Active\")),n.createElement(\"td\",null,e.Budget))}))))}});","extractedComments":[]}