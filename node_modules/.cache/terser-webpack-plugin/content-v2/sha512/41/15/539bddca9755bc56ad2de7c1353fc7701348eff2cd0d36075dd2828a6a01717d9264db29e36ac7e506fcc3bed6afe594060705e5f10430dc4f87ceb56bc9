{"map":"{\"version\":3,\"sources\":[\"/Users/reizelyase/Documents/Projects/react-redux-typescript/src/store/index.ts\"],\"names\":[\"redux_1\",\"__webpack_require__\",\"redux_saga_1\",\"index_1\",\"sagas_1\",\"sagaMiddleware\",\"default\",\"middlewares\",\"applyMiddleware\",\"store\",\"createStore\",\"compose\",\"run\",\"exports\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,IACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,KAEAG,EAAAH,EAAA,KAGMI,EAAiBH,EAAAI,UAEvB,IAAIC,EAAcP,EAAAQ,gBAAgBH,GAElC,MAAMI,EAAQT,EAAAU,YACZP,EAAAG,QACAN,EAAAW,QAAQJ,IAGVF,EAAeO,IAAIR,EAAAE,SACnBO,EAAAP,QAAeG\",\"sourcesContent\":[\"import { applyMiddleware, createStore, compose } from 'redux'\\nimport createSagaMiddleware from 'redux-saga'\\nimport reducers from '../reducers/index'\\nimport { State } from '../state'\\nimport rootSaga from '../sagas'\\n\\n/** Saga Middleware */\\nconst sagaMiddleware = createSagaMiddleware();\\n/** Create middlewares for redux */\\nlet middlewares = applyMiddleware(sagaMiddleware);\\n/** Create redux store */\\nconst store = createStore(\\n  reducers,\\n  compose(middlewares)\\n);\\n/** run saga watchers */\\nsagaMiddleware.run(rootSaga);\\nexport default store;\"]}","code":"webpackHotUpdate(0,{251:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const d=a(50),l=a(502),o=a(252),u=a(253),c=l.default();let r=d.applyMiddleware(c);const f=d.createStore(o.default,d.compose(r));c.run(u.default),t.default=f}});","extractedComments":[]}