{"map":"{\"version\":3,\"sources\":[\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/index.tsx\",\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/containers/app/index.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"ReactDom\",\"react_redux_1\",\"store_1\",\"app_1\",\"ConnectedApp\",\"connect\",\"state\",\"default\",\"render\",\"createElement\",\"Provider\",\"store\",\"document\",\"getElementById\",\"react_bootstrap_1\",\"List_1\",\"App\",\"campaigns\",\"Component\",\"[object Object]\",\"props\",\"super\",\"this\",\"console\",\"log\",\"id\",\"Navbar\",\"Brand\",\"href\",\"Row\",\"Col\",\"className\",\"exports\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,IACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,KACAI,EAAAJ,EAAA,KAEMK,EAAeH,EAAAI,QAASC,GACrBA,EADYL,CAElBE,EAAAI,SAEHP,EAASQ,OACPV,EAAAW,cAACR,EAAAS,SAAQ,CAACC,MAAOT,EAAAK,SACfT,EAAAW,cAACL,EAAY,OAEfQ,SAASC,eAAe,4FCd1B,MAAAf,EAAAC,EAAA,GACAE,EAAAF,EAAA,IACAe,EAAAf,EAAA,KAMAgB,EAAAhB,EAAA,KAGAA,EAAA,KAiDA,MAIMiB,EAAMf,EAAAI,QAJaC,IAAiB,CACxCW,UAAWX,EAAMW,YAGPhB,CA/CZ,cAA2BH,EAAMoB,UAC/BC,YAAYC,GACVC,MAAMD,GAENE,KAAKhB,MAAQ,CACXW,UAAW,IAIfE,oBACEI,QAAQC,IAAI,eAYdL,SACE,MAAMF,UAAEA,GAAcK,KAAKhB,MAC3B,OACER,EAAAW,cAAA,MAAA,CAAKgB,GAAG,OACN3B,EAAAW,cAACK,EAAAY,OAAM,KACL5B,EAAAW,cAACK,EAAAY,OAAOC,MAAK,CAACC,KAAK,SAAO,oBAE5B9B,EAAAW,cAAA,MAAA,CAAKgB,GAAG,WACN3B,EAAAW,cAACK,EAAAe,IAAG,KACF/B,EAAAW,cAACK,EAAAgB,IAAG,KACFhC,EAAAW,cAAA,MAAA,CAAKsB,UAAU,iBACbjC,EAAAW,cAACM,EAAAR,QAAI,cAkBrByB,EAAAzB,QAAeS\",\"sourcesContent\":[\"import * as React from 'react'\\nimport * as ReactDom from 'react-dom'\\nimport { Provider, connect } from 'react-redux'\\nimport store from './store'\\nimport App from './containers/app'\\n\\nconst ConnectedApp = connect((state) => {\\n  return state\\n})(App)\\n\\nReactDom.render(\\n  <Provider store={store}>\\n    <ConnectedApp />\\n  </Provider>,\\n  document.getElementById('root'),\\n)\\n\",\"import * as React from 'react'\\nimport { connect } from 'react-redux'\\nimport { \\n  Col,\\n  Container,\\n  Navbar,\\n  Row\\n} from 'react-bootstrap'\\nimport List from \\\"../../components/List\\\"\\nimport { Campaign } from \\\"../../types/campaign\\\"\\nimport { State, LatLng } from '../../reducers'\\nimport '../../styles/index.scss'\\n\\ninterface AppState {\\n  campaigns: Array<Campaign>\\n}\\n\\nclass AppComponent extends React.Component<any, AppState> {\\n  constructor(props: any) {\\n    super(props)\\n\\n    this.state = {\\n      campaigns: []\\n    }\\n  }\\n\\n  componentDidMount() {\\n    console.log('mounting...')\\n  }\\n\\n  // public componentWillReceiveProps(props: any) {\\n  //   if (props.located && props.location) {\\n  //     this.setState({\\n  //       campaigns: props.location,\\n  //       center: props.location\\n  //     })\\n  //   }\\n  // }\\n\\n  render() {\\n    const { campaigns } = this.state\\n    return (\\n      <div id=\\\"app\\\">\\n        <Navbar>\\n          <Navbar.Brand href=\\\"#home\\\">React Campaigns</Navbar.Brand>\\n        </Navbar>        \\n        <div id=\\\"wrapper\\\">\\n          <Row>\\n            <Col>\\n              <div className=\\\"campaign-list\\\">\\n                <List />\\n              </div>\\n            </Col>\\n          </Row>\\n        </div>                   \\n      </div>\\n    )\\n  }\\n}\\n\\nconst mapStateToProps = (state: State) => ({\\n  campaigns: state.campaigns,\\n})\\n\\nconst App = connect(\\n  mapStateToProps,\\n)(AppComponent)\\n\\nexport default App\\n\"]}","code":"webpackHotUpdate(0,{108:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=n(0),c=n(10),l=n(96),r=n(113),o=n(119),s=l.connect(e=>e)(o.default);c.render(a.createElement(l.Provider,{store:r.default},a.createElement(s,null)),document.getElementById(\"root\"))},119:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=n(0),c=n(96),l=n(148),r=n(142);n(143);const o=c.connect(e=>({campaigns:e.campaigns}))(class extends a.Component{constructor(e){super(e),this.state={campaigns:[]}}componentDidMount(){console.log(\"mounting...\")}render(){const{campaigns:e}=this.state;return a.createElement(\"div\",{id:\"app\"},a.createElement(l.Navbar,null,a.createElement(l.Navbar.Brand,{href:\"#home\"},\"React Campaigns\")),a.createElement(\"div\",{id:\"wrapper\"},a.createElement(l.Row,null,a.createElement(l.Col,null,a.createElement(\"div\",{className:\"campaign-list\"},a.createElement(r.default,null))))))}});t.default=o}});","extractedComments":[]}