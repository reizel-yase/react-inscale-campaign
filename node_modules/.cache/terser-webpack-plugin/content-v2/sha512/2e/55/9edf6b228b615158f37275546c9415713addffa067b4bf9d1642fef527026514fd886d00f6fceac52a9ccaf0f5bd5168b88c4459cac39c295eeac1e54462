{"map":"{\"version\":3,\"sources\":[\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/index.tsx\",\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/containers/app/index.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"ReactDom\",\"react_redux_1\",\"store_1\",\"app_1\",\"ConnectedApp\",\"connect\",\"state\",\"default\",\"render\",\"createElement\",\"Provider\",\"store\",\"document\",\"getElementById\",\"react_bootstrap_1\",\"creators_1\",\"List_1\",\"App\",\"fetching\",\"campaigns\",\"dispatch\",\"Component\",\"[object Object]\",\"props\",\"super\",\"this\",\"window\",\"AddCampaigns\",\"message\",\"getCampaigns\",\"setState\",\"id\",\"Navbar\",\"Brand\",\"href\",\"Row\",\"Col\",\"className\",\"md\",\"InputGroup\",\"FormControl\",\"placeholder\",\"aria-label\",\"aria-describedby\",\"Append\",\"Button\",\"type\",\"span\",\"offset\",\"Form\",\"Control\",\"data\",\"loading\",\"exports\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,IACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,KACAI,EAAAJ,EAAA,KAEMK,EAAeH,EAAAI,QAASC,GACrBA,EADYL,CAElBE,EAAAI,SAEHP,EAASQ,OACPV,EAAAW,cAACR,EAAAS,SAAQ,CAACC,MAAOT,EAAAK,SACfT,EAAAW,cAACL,EAAY,OAEfQ,SAASC,eAAe,4FCd1B,MAAAf,EAAAC,EAAA,GAEAE,EAAAF,EAAA,IACAe,EAAAf,EAAA,IAUAgB,EAAAhB,EAAA,KACAiB,EAAAjB,EAAA,KAGAA,EAAA,KA2FA,MAWMkB,EAAMhB,EAAAI,QAXaC,IAAiB,CACxCY,SAAUZ,EAAMY,SAChBC,UAAWb,EAAMa,YAGSC,IACnB,CACLA,SAAAA,IAIQnB,CArFZ,cAA2BH,EAAMuB,UAC/BC,YAAYC,GACVC,MAAMD,GAENE,KAAKnB,MAAQ,CACXa,UAAW,GACXD,SAAUK,EAAML,UAGlBQ,OAAOC,aAAgBC,MAKzBN,oBACEG,KAAKF,MAAMH,SAASL,EAAAc,gBAGfP,0BAA0BC,GAC3BA,EAAMJ,WACRM,KAAKK,SAAS,CACZX,UAAWI,EAAMJ,UACjBD,SAAUK,EAAML,WAKtBI,SACE,MAAMH,UAAEA,EAASD,SAAEA,GAAaO,KAAKnB,MACrC,OACER,EAAAW,cAAA,MAAA,CAAKsB,GAAG,OACNjC,EAAAW,cAACK,EAAAkB,OAAM,KACLlC,EAAAW,cAACK,EAAAkB,OAAOC,MAAK,CAACC,KAAK,SAAO,oBAE5BpC,EAAAW,cAAA,MAAA,CAAKsB,GAAG,WACNjC,EAAAW,cAACK,EAAAqB,IAAG,KACFrC,EAAAW,cAACK,EAAAsB,IAAG,KACFtC,EAAAW,cAAA,MAAA,CAAK4B,UAAU,WACbvC,EAAAW,cAACK,EAAAqB,IAAG,KACFrC,EAAAW,cAACK,EAAAsB,IAAG,CAACE,GAAI,GACPxC,EAAAW,cAACK,EAAAyB,WAAU,CAACF,UAAU,QACpBvC,EAAAW,cAACK,EAAA0B,YAAW,CACVC,YAAY,iBAAgBC,aACjB,iBAAgBC,mBACV,iBAEnB7C,EAAAW,cAACK,EAAAyB,WAAWK,OAAM,KAChB9C,EAAAW,cAACK,EAAA+B,OAAM,CAACC,KAAK,UAAQ,aAI3BhD,EAAAW,cAACK,EAAAsB,IAAG,CAACE,GAAI,CAAES,KAAM,EAAGC,OAAQ,IAC1BlD,EAAAW,cAACK,EAAAqB,IAAG,KACFrC,EAAAW,cAACK,EAAAsB,IAAG,CAACE,GAAI,GACPxC,EAAAW,cAACK,EAAAmC,KAAKC,QAAO,CAACJ,KAAK,OAAOL,YAAY,gBAExC3C,EAAAW,cAACK,EAAAsB,IAAG,CAACE,GAAI,GACPxC,EAAAW,cAACK,EAAAmC,KAAKC,QAAO,CAACJ,KAAK,OAAOL,YAAY,kBAMhD3C,EAAAW,cAACO,EAAAT,QAAI,CAAC4C,KAAMhC,EAAWiC,QAASlC,KAElCpB,EAAAW,cAACK,EAAAsB,IAAG,YAyBhBiB,EAAA9C,QAAeU\",\"sourcesContent\":[\"import * as React from 'react'\\nimport * as ReactDom from 'react-dom'\\nimport { Provider, connect } from 'react-redux'\\nimport store from './store'\\nimport App from './containers/app'\\n\\nconst ConnectedApp = connect((state) => {\\n  return state\\n})(App)\\n\\nReactDom.render(\\n  <Provider store={store}>\\n    <ConnectedApp />\\n  </Provider>,\\n  document.getElementById('root'),\\n)\\n\",\"import * as React from 'react'\\nimport { Dispatch } from 'redux'\\nimport { connect } from 'react-redux'\\nimport { \\n  Button,\\n  Col,\\n  Form,\\n  FormControl,\\n  InputGroup,\\n  Navbar,\\n  Row\\n} from 'react-bootstrap'\\n\\nimport { addCampaigns, getCampaigns } from '../../action/creators'\\nimport List from \\\"../../components/List\\\"\\nimport { Campaign } from \\\"../../types/campaign\\\"\\nimport { State } from '../../reducers'\\nimport '../../styles/index.scss'\\n\\ndeclare global {\\n  interface Window { AddCampaigns: any; }\\n}\\n\\ninterface Props {\\n  fetching: boolean\\n  campaigns: Array<Campaign>\\n  dispatch: any\\n}\\n\\ninterface AppState {\\n  fetching: boolean\\n  campaigns: Array<Campaign>\\n}\\n\\nclass AppComponent extends React.Component<Props, AppState> {\\n  constructor(props: Props) {\\n    super(props)\\n\\n    this.state = {\\n      campaigns: [],\\n      fetching: props.fetching,\\n    }\\n\\n    window.AddCampaigns = (message: string) => {\\n      \\n    }\\n  }\\n\\n  componentDidMount() {\\n    this.props.dispatch(getCampaigns())\\n  }\\n\\n  public componentWillReceiveProps(props: any) {\\n    if (props.campaigns) {\\n      this.setState({\\n        campaigns: props.campaigns,\\n        fetching: props.fetching\\n      })\\n    }\\n  }\\n\\n  render() {\\n    const { campaigns, fetching } = this.state\\n    return (\\n      <div id=\\\"app\\\">\\n        <Navbar>\\n          <Navbar.Brand href=\\\"#home\\\">React Campaigns</Navbar.Brand>\\n        </Navbar>        \\n        <div id=\\\"wrapper\\\">\\n          <Row>\\n            <Col>\\n              <div className=\\\"filters\\\">\\n                <Row>\\n                  <Col md={5}>\\n                    <InputGroup className=\\\"mb-3\\\">\\n                      <FormControl\\n                        placeholder=\\\"Search by name\\\"\\n                        aria-label=\\\"Search by name\\\"\\n                        aria-describedby=\\\"basic-addon2\\\"\\n                      />\\n                      <InputGroup.Append>\\n                        <Button type=\\\"submit\\\">Submit</Button>\\n                      </InputGroup.Append>\\n                    </InputGroup>\\n                  </Col>\\n                  <Col md={{ span: 6, offset: 1 }}>\\n                    <Row>\\n                      <Col md={6}>\\n                        <Form.Control type=\\\"text\\\" placeholder=\\\"Start Date\\\" />\\n                      </Col>\\n                      <Col md={6}>\\n                        <Form.Control type=\\\"text\\\" placeholder=\\\"End Date\\\" />\\n                      </Col>\\n                    </Row>\\n                  </Col>\\n                </Row>\\n              </div>\\n              <List data={campaigns} loading={fetching} />\\n            </Col>\\n            <Col>\\n            </Col>\\n          </Row>\\n        </div>                   \\n      </div>\\n    )\\n  }\\n}\\n\\nconst mapStateToProps = (state: State) => ({\\n  fetching: state.fetching,\\n  campaigns: state.campaigns,\\n})\\n\\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\\n  return {\\n    dispatch\\n  }\\n}\\n\\nconst App = connect(\\n  mapStateToProps,\\n  mapDispatchToProps\\n)(AppComponent)\\n\\nexport default App\\n\"]}","code":"webpackHotUpdate(0,{112:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=n(0),l=n(10),c=n(99),r=n(117),o=n(121),m=c.connect(e=>e)(o.default);l.render(a.createElement(c.Provider,{store:r.default},a.createElement(m,null)),document.getElementById(\"root\"))},121:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=n(0),l=n(99),c=n(98),r=n(144),o=n(145);n(148);const m=l.connect(e=>({fetching:e.fetching,campaigns:e.campaigns}),e=>({dispatch:e}))(class extends a.Component{constructor(e){super(e),this.state={campaigns:[],fetching:e.fetching},window.AddCampaigns=e=>{}}componentDidMount(){this.props.dispatch(r.getCampaigns())}componentWillReceiveProps(e){e.campaigns&&this.setState({campaigns:e.campaigns,fetching:e.fetching})}render(){const{campaigns:e,fetching:t}=this.state;return a.createElement(\"div\",{id:\"app\"},a.createElement(c.Navbar,null,a.createElement(c.Navbar.Brand,{href:\"#home\"},\"React Campaigns\")),a.createElement(\"div\",{id:\"wrapper\"},a.createElement(c.Row,null,a.createElement(c.Col,null,a.createElement(\"div\",{className:\"filters\"},a.createElement(c.Row,null,a.createElement(c.Col,{md:5},a.createElement(c.InputGroup,{className:\"mb-3\"},a.createElement(c.FormControl,{placeholder:\"Search by name\",\"aria-label\":\"Search by name\",\"aria-describedby\":\"basic-addon2\"}),a.createElement(c.InputGroup.Append,null,a.createElement(c.Button,{type:\"submit\"},\"Submit\")))),a.createElement(c.Col,{md:{span:6,offset:1}},a.createElement(c.Row,null,a.createElement(c.Col,{md:6},a.createElement(c.Form.Control,{type:\"text\",placeholder:\"Start Date\"})),a.createElement(c.Col,{md:6},a.createElement(c.Form.Control,{type:\"text\",placeholder:\"End Date\"})))))),a.createElement(o.default,{data:e,loading:t})),a.createElement(c.Col,null))))}});t.default=m}});","extractedComments":[]}