{"map":"{\"version\":3,\"sources\":[\"/Users/reizelyase/Documents/Projects/react-redux-typescript/src/store/index.ts\",\"/Users/reizelyase/Documents/Projects/react-redux-typescript/src/components/SearchResults/index.tsx\"],\"names\":[\"redux_1\",\"__webpack_require__\",\"redux_saga_1\",\"reducers_1\",\"sagas_1\",\"composeEnhancers\",\"window\",\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\",\"compose\",\"sagaMiddleware\",\"default\",\"middlewares\",\"applyMiddleware\",\"store\",\"createStore\",\"run\",\"exports\",\"React\",\"SearchResults\",\"connect\",\"state\",\"results\",\"fetched\",\"react_redux_1\",\"Component\",\"[object Object]\",\"props\",\"super\",\"this\",\"matches\",\"console\",\"log\",\"setState\",\"createElement\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,IACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAH,EAAA,KAEMI,EAAoBC,OAAeC,sCAAwCP,EAAAQ,QAC3EC,EAAiBP,EAAAQ,UACjBC,EAAcX,EAAAY,gBAAgBH,GAC9BI,EAAQb,EAAAc,YACZX,EAAAO,QACAL,EAAiBM,IAEnBF,EAAeM,IAAIX,EAAAM,SAEnBM,EAAAN,QAAeG,qFCdf,MAAAI,EAAAhB,EAAA,GAyCA,MAOMiB,EA/CNjB,EAAA,KA+CsBkB,QAPGC,IAChB,CACLC,QAASD,EAAMC,QACfC,QAASF,EAAME,UAIGC,CAnCtB,cAAqCN,EAAMO,UACzCC,YAAYC,GACVC,MAAMD,GAENE,KAAKR,MAAQ,CACXS,QAAS,IAINJ,oBACLK,QAAQC,IAAI,QAASH,KAAKF,MAAML,SAG3BI,0BAA0BC,GAC/BE,KAAKI,SAAS,CACZH,QAASH,EAAML,UAIZI,SACL,OACER,EAAAgB,cAAA,MAAA,SAkBNjB,EAAAN,QAAeQ\",\"sourcesContent\":[\"import { applyMiddleware, createStore, compose } from 'redux'\\nimport createSagaMiddleware from 'redux-saga'\\nimport reducers from '../reducers'\\nimport rootSaga from '../sagas'\\n\\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\\nconst sagaMiddleware = createSagaMiddleware()\\nconst middlewares = applyMiddleware(sagaMiddleware)\\nconst store = createStore(\\n  reducers,\\n  composeEnhancers(middlewares)\\n)\\nsagaMiddleware.run(rootSaga)\\n\\nexport default store\",\"import * as React from 'react'\\nimport { connect } from 'react-redux'\\nimport { State } from '../../reducers'\\n\\ninterface Props {\\n  results: any[]\\n  fetched: boolean\\n}\\n\\ninterface State {\\n  matches: any[]\\n}\\n\\nclass SearchResultsComponent extends React.Component<Props, State> {\\n  constructor(props: Props) {\\n    super(props)\\n\\n    this.state = {\\n      matches: []\\n    }\\n  }\\n\\n  public componentDidMount() {\\n    console.log('props', this.props.results)\\n  }\\n\\n  public componentWillReceiveProps(props: any) {\\n    this.setState({\\n      matches: props.results\\n    })\\n  }\\n\\n  public render() {\\n    return (\\n      <div>\\n        \\n      </div>\\n    )\\n  }\\n}\\n\\nconst mapStateToProps = (state: State) => {\\n  return {\\n    results: state.results,\\n    fetched: state.fetched\\n  }\\n}\\n\\nconst SearchResults = connect(\\n  mapStateToProps,\\n)(SearchResultsComponent)\\n\\nexport default SearchResults\"]}","code":"webpackHotUpdate(0,{250:function(e,t,s){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const o=s(66),n=s(500),c=s(251),r=s(252),l=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||o.compose,u=n.default(),d=o.applyMiddleware(u),a=o.createStore(c.default,l(d));u.run(r.default),t.default=a},493:function(e,t,s){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const o=s(0);const n=s(150).connect(e=>({results:e.results,fetched:e.fetched}))(class extends o.Component{constructor(e){super(e),this.state={matches:[]}}componentDidMount(){console.log(\"props\",this.props.results)}componentWillReceiveProps(e){this.setState({matches:e.results})}render(){return o.createElement(\"div\",null)}});t.default=n}});","extractedComments":[]}