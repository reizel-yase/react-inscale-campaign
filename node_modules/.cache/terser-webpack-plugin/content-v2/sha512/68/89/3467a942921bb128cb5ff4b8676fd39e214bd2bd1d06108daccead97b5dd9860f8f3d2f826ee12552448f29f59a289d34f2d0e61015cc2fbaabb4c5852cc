{"map":"{\"version\":3,\"sources\":[\"/Users/reizelyase/Documents/Projects/react-redux-typescript/src/containers/app/index.tsx\",\"/Users/reizelyase/Documents/Projects/react-redux-typescript/src/components/AutoComplete/index.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"react_bootstrap_1\",\"AutoComplete_1\",\"Map_1\",\"SearchResults_1\",\"exports\",\"default\",\"Component\",\"[object Object]\",\"createElement\",\"id\",\"Navbar\",\"bg\",\"variant\",\"Brand\",\"href\",\"className\",\"Container\",\"Row\",\"Col\",\"md\",\"googleMapURL\",\"loadingElement\",\"style\",\"height\",\"containerElement\",\"width\",\"mapElement\",\"react_redux_1\",\"creators_1\",\"AutoCompleteComponent\",\"super\",\"this\",\"updateSearchKey\",\"bind\",\"e\",\"props\",\"updateSearch\",\"target\",\"value\",\"ref\",\"type\",\"onChange\",\"AutoComplete\",\"connect\",\"dispatch\",\"newSearchKey\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,KAMAE,EAAAF,EAAA,KACAG,EAAAH,EAAA,KACAI,EAAAJ,EAAA,KACAA,EAAA,KAgCAK,EAAAC,QA9BA,cAAkBP,EAAMQ,UACfC,SACL,OACET,EAAAU,cAAA,MAAA,CAAKC,GAAG,OACNX,EAAAU,cAACR,EAAAU,OAAM,CAACC,GAAG,OAAOC,QAAQ,QACxBd,EAAAU,cAACR,EAAAU,OAAOG,MAAK,CAACC,KAAK,SAAO,oCAE5BhB,EAAAU,cAAA,MAAA,CAAKO,UAAU,WACbjB,EAAAU,cAACR,EAAAgB,UAAS,CAACP,GAAG,aACZX,EAAAU,cAACR,EAAAiB,IAAG,KACFnB,EAAAU,cAACR,EAAAkB,IAAG,CAACC,GAAG,KACNrB,EAAAU,cAACN,EAAAG,QAAG,CACFe,aAAc,gIACdC,eAAgBvB,EAAAU,cAAA,MAAA,CAAKc,MAAO,CAAEC,OAAQ,UACtCC,iBAAkB1B,EAAAU,cAAA,MAAA,CAAKc,MAAO,CAAEC,OAAQ,QAASE,MAAO,WACxDC,WAAY5B,EAAAU,cAAA,MAAA,CAAKc,MAAO,CAAEC,OAAQ,aAGtCzB,EAAAU,cAACR,EAAAkB,IAAG,CAACC,GAAG,KACNrB,EAAAU,cAACP,EAAAI,QAAY,MACbP,EAAAU,cAACL,EAAAE,QAAa,gGChC9B,MAAAP,EAAAC,EAAA,GACA4B,EAAA5B,EAAA,KAEA6B,EAAA7B,EAAA,KAMA,MAAa8B,UAA8B/B,EAAMQ,UAC/CC,cACEuB,QACAC,KAAKC,gBAAkBD,KAAKC,gBAAgBC,KAAKF,MAG5CxB,gBAAgB2B,GACrBH,KAAKI,MAAMC,aAAaF,EAAEG,OAAOC,OAG5B/B,SACL,OACET,EAAAU,cAAA,MAAA,CAAKC,GAAG,YACNX,EAAAU,cAAA,QAAA,CAAOC,GAAG,iBAAiB8B,IAAI,mBAAmBC,KAAK,OAAOC,SAAUV,KAAKC,oBAbrF5B,EAAAyB,sBAAAA,EAmBA,MAQMa,EAAef,EAAAgB,QAROC,IACnB,CACLR,aAAeS,IACbD,EAAShB,EAAAQ,aAAaS,OAKPlB,CAEnBE,GAEFzB,EAAAC,QAAeqC\",\"sourcesContent\":[\"import * as React from 'react'\\nimport { \\n  Col,\\n  Container,\\n  Navbar,\\n  Row\\n} from 'react-bootstrap'\\nimport AutoComplete from '../../components/AutoComplete'\\nimport Map from '../../components/Map'\\nimport SearchResults from '../../components/SearchResults'\\nimport '../../styles/index.scss'\\n\\nclass App extends React.Component<{}, {}> {\\n  public render() {\\n    return (\\n      <div id=\\\"app\\\">\\n        <Navbar bg=\\\"dark\\\" variant=\\\"dark\\\">\\n          <Navbar.Brand href=\\\"#home\\\">React/Redux AutoComplete Search</Navbar.Brand>\\n        </Navbar>\\n        <div className=\\\"wrapper\\\">\\n          <Container id=\\\"container\\\">\\n            <Row>\\n              <Col md=\\\"8\\\">\\n                <Map \\n                  googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyBiAJBK9gGHhTW1-TAdCczJ2Sf1maih8ZQ&v=3.exp&libraries=geometry,drawing,places`}\\n                  loadingElement={<div style={{ height: `100%` }} />}\\n                  containerElement={<div style={{ height: `800px`, width: `800px` }} />}\\n                  mapElement={<div style={{ height: `100%` }} />}\\n                />              \\n              </Col>\\n              <Col md=\\\"8\\\">\\n                <AutoComplete />\\n                <SearchResults />\\n              </Col>\\n            </Row>\\n          </Container>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App\\n\",\"import * as React from 'react'\\nimport { connect } from 'react-redux';\\nimport { Dispatch } from 'redux'\\nimport { updateSearch } from '../../action/creators'\\n\\ninterface Props {\\n  updateSearch: (x: string) => void\\n}\\n\\nexport class AutoCompleteComponent extends React.Component<Props, {}> {\\n  constructor() {\\n    super();\\n    this.updateSearchKey = this.updateSearchKey.bind(this);\\n  }\\n\\n  public updateSearchKey(e: React.ChangeEvent<HTMLInputElement>) {\\n    this.props.updateSearch(e.target.value);\\n  }\\n\\n  public render() {\\n    return (\\n      <div id=\\\"greeting\\\">\\n        <input id='greeting-input' ref='greetingInputRef' type='text' onChange={this.updateSearchKey}></input>\\n      </div>\\n    );\\n  }\\n}\\n\\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\\n  return {\\n    updateSearch: (newSearchKey: string) => {\\n      dispatch(updateSearch(newSearchKey))\\n    }\\n  }\\n}\\n\\nconst AutoComplete = connect(\\n  mapDispatchToProps,\\n)(AutoCompleteComponent)\\n\\nexport default AutoComplete\\n\\n\\n\"]}","code":"webpackHotUpdate(0,{236:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=a(0),r=a(465),l=a(259),c=a(261),i=a(457);a(458);t.default=class extends n.Component{render(){return n.createElement(\"div\",{id:\"app\"},n.createElement(r.Navbar,{bg:\"dark\",variant:\"dark\"},n.createElement(r.Navbar.Brand,{href:\"#home\"},\"React/Redux AutoComplete Search\")),n.createElement(\"div\",{className:\"wrapper\"},n.createElement(r.Container,{id:\"container\"},n.createElement(r.Row,null,n.createElement(r.Col,{md:\"8\"},n.createElement(c.default,{googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiAJBK9gGHhTW1-TAdCczJ2Sf1maih8ZQ&v=3.exp&libraries=geometry,drawing,places\",loadingElement:n.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:n.createElement(\"div\",{style:{height:\"800px\",width:\"800px\"}}),mapElement:n.createElement(\"div\",{style:{height:\"100%\"}})})),n.createElement(r.Col,{md:\"8\"},n.createElement(l.default,null),n.createElement(i.default,null))))))}}},259:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=a(0),r=a(218),l=a(260);class c extends n.Component{constructor(){super(),this.updateSearchKey=this.updateSearchKey.bind(this)}updateSearchKey(e){this.props.updateSearch(e.target.value)}render(){return n.createElement(\"div\",{id:\"greeting\"},n.createElement(\"input\",{id:\"greeting-input\",ref:\"greetingInputRef\",type:\"text\",onChange:this.updateSearchKey}))}}t.AutoCompleteComponent=c;const i=r.connect(e=>({updateSearch:t=>{e(l.updateSearch(t))}}))(c);t.default=i}});","extractedComments":[]}