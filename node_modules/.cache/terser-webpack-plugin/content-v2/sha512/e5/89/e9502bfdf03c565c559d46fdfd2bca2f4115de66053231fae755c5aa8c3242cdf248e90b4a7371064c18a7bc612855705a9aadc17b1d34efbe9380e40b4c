{"map":"{\"version\":3,\"sources\":[\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/containers/app/index.tsx\",\"/Users/reizelyase/Documents/Projects/react-inscale-campaign/src/components/List/index.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"react_redux_1\",\"react_bootstrap_1\",\"creators_1\",\"List_1\",\"App\",\"connect\",\"state\",\"adding\",\"fetching\",\"campaigns\",\"dispatch\",\"Component\",\"[object Object]\",\"props\",\"super\",\"this\",\"window\",\"AddCampaigns\",\"addCampaigns\",\"searchByName\",\"bind\",\"getCampaigns\",\"e\",\"target\",\"value\",\"searchCampaignsByName\",\"setState\",\"createElement\",\"id\",\"Navbar\",\"Brand\",\"href\",\"Row\",\"Col\",\"className\",\"md\",\"InputGroup\",\"FormControl\",\"placeholder\",\"aria-label\",\"aria-describedby\",\"onChange\",\"span\",\"offset\",\"Form\",\"Control\",\"type\",\"default\",\"data\",\"loading\",\"exports\",\"moment\",\"Spinner\",\"animation\",\"Table\",\"striped\",\"bordered\",\"hover\",\"map\",\"c\",\"index\",\"curDate\",\"format\",\"end\",\"startDate\",\"endDate\",\"console\",\"log\",\"isActive\",\"key\",\"name\",\"Badge\",\"variant\",\"Budget\"],\"mappings\":\"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\",\"sourcesContent\":[\"import * as React from 'react'\\nimport { Dispatch } from 'redux'\\nimport { connect } from 'react-redux'\\nimport { \\n  // Button,\\n  Col,\\n  Form,\\n  FormControl,\\n  InputGroup,\\n  Navbar,\\n  Row\\n} from 'react-bootstrap'\\n\\nimport { \\n  addCampaigns, \\n  getCampaigns,\\n  searchCampaignsByName \\n} from '../../action/creators'\\nimport List from \\\"../../components/List\\\"\\nimport { Campaign, Payload } from \\\"../../types/campaign\\\"\\nimport { State } from '../../reducers'\\nimport '../../styles/index.scss'\\n\\ndeclare global {\\n  interface Window { AddCampaigns: any; }\\n}\\n\\ninterface Props {\\n  adding: boolean\\n  fetching: boolean\\n  campaigns: Array<Campaign>\\n  dispatch: any\\n}\\n\\ninterface AppState {\\n  fetching: boolean\\n  campaigns: Array<Campaign>\\n}\\n\\nclass AppComponent extends React.Component<Props, AppState> {\\n  constructor(props: Props) {\\n    super(props)\\n\\n    this.state = {\\n      campaigns: [],\\n      fetching: props.fetching || props.adding\\n    }\\n\\n    window.AddCampaigns = (campaigns: Payload[]) => {\\n      this.props.dispatch(addCampaigns(campaigns))\\n    }\\n\\n    this.searchByName = this.searchByName.bind(this)\\n  }\\n\\n  componentDidMount() {\\n    this.props.dispatch(getCampaigns())\\n  }\\n\\n  searchByName(e: any) {\\n    if (e.target.value) {\\n      this.props.dispatch(searchCampaignsByName(e.target.value))\\n    }\\n  }\\n\\n  public componentWillReceiveProps(props: any) {\\n    if (props.campaigns) {\\n      this.setState({\\n        campaigns: props.campaigns,\\n        fetching: props.fetching\\n      })\\n    }\\n  }\\n\\n  render() {\\n    const { campaigns, fetching } = this.state\\n    return (\\n      <div id=\\\"app\\\">\\n        <Navbar>\\n          <Navbar.Brand href=\\\"#home\\\">React Campaigns</Navbar.Brand>\\n        </Navbar>        \\n        <div id=\\\"wrapper\\\">\\n          <Row>\\n            <Col>\\n              <div className=\\\"filters\\\">\\n                <Row>\\n                  <Col md={5}>\\n                    <InputGroup className=\\\"mb-3\\\">\\n                      <FormControl\\n                        placeholder=\\\"Search by name\\\"\\n                        aria-label=\\\"Search by name\\\"\\n                        aria-describedby=\\\"basic-addon2\\\"\\n                        onChange={this.searchByName}\\n                      />\\n                      {/* <InputGroup.Append>\\n                        <Button type=\\\"submit\\\">Submit</Button>\\n                      </InputGroup.Append> */}\\n                    </InputGroup>\\n                  </Col>\\n                  <Col md={{ span: 6, offset: 1 }}>\\n                    <Row>\\n                      <Col md={6}>\\n                        <Form.Control type=\\\"text\\\" placeholder=\\\"Start Date\\\" />\\n                      </Col>\\n                      <Col md={6}>\\n                        <Form.Control type=\\\"text\\\" placeholder=\\\"End Date\\\" />\\n                      </Col>\\n                    </Row>\\n                  </Col>\\n                </Row>\\n              </div>\\n              <List data={campaigns} loading={fetching} />\\n            </Col>\\n            <Col>\\n            </Col>\\n          </Row>\\n        </div>                   \\n      </div>\\n    )\\n  }\\n}\\n\\nconst mapStateToProps = (state: State) => ({\\n  adding: state.adding,\\n  fetching: state.fetching,\\n  campaigns: state.campaigns,\\n})\\n\\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\\n  return {\\n    dispatch\\n  }\\n}\\n\\nconst App = connect(\\n  mapStateToProps,\\n  mapDispatchToProps\\n)(AppComponent)\\n\\nexport default App\\n\",\"import * as React from \\\"react\\\"\\nimport * as moment from \\\"moment\\\"\\nimport { \\n  Badge,\\n  Spinner, \\n  Table \\n} from 'react-bootstrap'\\nimport { Campaign } from \\\"../../types/campaign\\\"\\nimport './styles.scss'\\n\\ninterface Props {\\n  data: Array<Campaign>\\n  loading: boolean\\n}\\n\\nconst List = ({\\n  data,\\n  loading\\n}: Props) => {\\n  return (\\n    <div className=\\\"campaign-list\\\">\\n      {\\n        !loading ? \\n        <Table striped bordered hover>\\n          <thead>\\n            <tr>\\n              <th>Name</th>\\n              <th>Start Date</th>\\n              <th>End Date</th>\\n              <th>Active</th>\\n              <th>Budget</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            {\\n              data.map((c: Campaign, index: number) => {\\n                const curDate = moment().format('DD/MM/YYYY')\\n                const start = moment(c.startDate, 'DD/MM/YYYY')\\n                const end = moment(c.endDate, 'DD/MM/YYYY').format('DD/MM/YYYY')\\n                console.log({curDate})\\n                console.log({end})\\n                const isActive = curDate <= end\\n                // console.log('isActiveEnd', end >= curDate)\\n                // const isActive = curDate >= start && curDate <= end\\n                // console.log({isActive})\\n                return <tr key={index}>\\n                  <td>{c.name}</td>\\n                  <td>{c.startDate}</td>\\n                  <td>{c.endDate}</td>\\n                  <td>\\n                    <div className=\\\"status\\\">\\n                      <Badge variant={!!isActive ? \\\"success\\\": \\\"danger\\\"}>&nbsp;</Badge> {!!isActive ? \\\"Active\\\" : \\\"Inactive\\\"}\\n                    </div>\\n                  </td>\\n                  <td>{c.Budget}</td>\\n                </tr>\\n              })\\n            }\\n          </tbody>\\n        </Table> : <Spinner animation=\\\"grow\\\" />\\n      }\\n    </div>\\n  )\\n}\\n\\nexport default List\"]}","code":"webpackHotUpdate(0,{249:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=a(0),l=a(227),c=a(226),r=a(272),m=a(273);a(277);const s=l.connect(e=>({adding:e.adding,fetching:e.fetching,campaigns:e.campaigns}),e=>({dispatch:e}))(class extends n.Component{constructor(e){super(e),this.state={campaigns:[],fetching:e.fetching||e.adding},window.AddCampaigns=e=>{this.props.dispatch(r.addCampaigns(e))},this.searchByName=this.searchByName.bind(this)}componentDidMount(){this.props.dispatch(r.getCampaigns())}searchByName(e){e.target.value&&this.props.dispatch(r.searchCampaignsByName(e.target.value))}componentWillReceiveProps(e){e.campaigns&&this.setState({campaigns:e.campaigns,fetching:e.fetching})}render(){const{campaigns:e,fetching:t}=this.state;return n.createElement(\"div\",{id:\"app\"},n.createElement(c.Navbar,null,n.createElement(c.Navbar.Brand,{href:\"#home\"},\"React Campaigns\")),n.createElement(\"div\",{id:\"wrapper\"},n.createElement(c.Row,null,n.createElement(c.Col,null,n.createElement(\"div\",{className:\"filters\"},n.createElement(c.Row,null,n.createElement(c.Col,{md:5},n.createElement(c.InputGroup,{className:\"mb-3\"},n.createElement(c.FormControl,{placeholder:\"Search by name\",\"aria-label\":\"Search by name\",\"aria-describedby\":\"basic-addon2\",onChange:this.searchByName}))),n.createElement(c.Col,{md:{span:6,offset:1}},n.createElement(c.Row,null,n.createElement(c.Col,{md:6},n.createElement(c.Form.Control,{type:\"text\",placeholder:\"Start Date\"})),n.createElement(c.Col,{md:6},n.createElement(c.Form.Control,{type:\"text\",placeholder:\"End Date\"})))))),n.createElement(m.default,{data:e,loading:t})),n.createElement(c.Col,null))))}});t.default=s},273:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=a(0),l=a(4),c=a(226);a(275);t.default=({data:e,loading:t})=>n.createElement(\"div\",{className:\"campaign-list\"},t?n.createElement(c.Spinner,{animation:\"grow\"}):n.createElement(c.Table,{striped:!0,bordered:!0,hover:!0},n.createElement(\"thead\",null,n.createElement(\"tr\",null,n.createElement(\"th\",null,\"Name\"),n.createElement(\"th\",null,\"Start Date\"),n.createElement(\"th\",null,\"End Date\"),n.createElement(\"th\",null,\"Active\"),n.createElement(\"th\",null,\"Budget\"))),n.createElement(\"tbody\",null,e.map((e,t)=>{const a=l().format(\"DD/MM/YYYY\"),r=(l(e.startDate,\"DD/MM/YYYY\"),l(e.endDate,\"DD/MM/YYYY\").format(\"DD/MM/YYYY\"));console.log({curDate:a}),console.log({end:r});const m=a<=r;return n.createElement(\"tr\",{key:t},n.createElement(\"td\",null,e.name),n.createElement(\"td\",null,e.startDate),n.createElement(\"td\",null,e.endDate),n.createElement(\"td\",null,n.createElement(\"div\",{className:\"status\"},n.createElement(c.Badge,{variant:m?\"success\":\"danger\"},\" \"),\" \",m?\"Active\":\"Inactive\")),n.createElement(\"td\",null,e.Budget))}))))}});","extractedComments":[]}